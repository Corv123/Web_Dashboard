{"ast":null,"code":"// External Charity API utility for React\n// Uses browser crypto.subtle for SHA256 and HMAC\n\nconst API_URL = 'https://stg.foodservices.openapipaas.com/common/social-ewallet/charities?page=0';\nconst API_KEY = 'r4TEOYgoqurHaCR3sLFC';\nconst PROJECT_ID = '205d6cbd-db6c-4dc0-9522-cf011e0dd34c';\nconst PLATFORM_SYSCODE = '101';\n\n// Helper: Get current UTC ISO8601 string\nfunction getUtcIsoString() {\n  return new Date().toISOString();\n}\n\n// Helper: SHA256 hash (returns hex string)\nasync function sha256Hex(str) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(str);\n  const hashBuffer = await window.crypto.subtle.digest('SHA-256', data);\n  return Array.from(new Uint8Array(hashBuffer)).map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\n// Helper: HMAC-SHA256 signature (returns hex string)\nasync function hmacSha256Hex(key, str) {\n  const encoder = new TextEncoder();\n  const keyData = encoder.encode(key);\n  const cryptoKey = await window.crypto.subtle.importKey('raw', keyData, {\n    name: 'HMAC',\n    hash: 'SHA-256'\n  }, false, ['sign']);\n  const sigBuffer = await window.crypto.subtle.sign('HMAC', cryptoKey, encoder.encode(str));\n  return Array.from(new Uint8Array(sigBuffer)).map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\n// Main fetch function\nexport async function getExternalCharities() {\n  const method = 'GET';\n  const url = new URL(API_URL);\n  const host = url.host;\n  const datetime = getUtcIsoString();\n  const body = '';\n  const contentSha256 = await sha256Hex(body);\n\n  // Canonical headers and signed headers\n  const canonicalHeaders = [`datetime:${datetime}`, `host:${host}`, `project-id:${PROJECT_ID}`, `platform-syscode:${PLATFORM_SYSCODE}`, `content-sha256:${contentSha256}`];\n  const signedHeaders = 'datetime|host|project-id|platform-syscode|content-sha256';\n\n  // Canonical request string for signature\n  const canonicalRequest = [method, url.pathname + url.search, canonicalHeaders.join('\\n')].join('\\n');\n\n  // Signature\n  const signature = await hmacSha256Hex(API_KEY, canonicalRequest);\n\n  // Authorization header\n  const authorization = `HMAC-SHA256 Credential=${API_KEY}&SignedHeaders=${signedHeaders}&Signature=${signature}`;\n\n  // Headers\n  const headers = {\n    'api-key': API_KEY,\n    'project-id': PROJECT_ID,\n    'platform-syscode': PLATFORM_SYSCODE,\n    'Content-Type': 'application/json',\n    'datetime': datetime,\n    'content-sha256': contentSha256,\n    'Authorization': authorization\n  };\n\n  // Fetch\n  const res = await fetch(API_URL, {\n    method,\n    headers\n  });\n  if (!res.ok) throw new Error('Failed to fetch charities: ' + res.status);\n  const json = await res.json();\n  // Return the data array\n  return json.result && Array.isArray(json.result.data) ? json.result.data : [];\n}","map":{"version":3,"names":["API_URL","API_KEY","PROJECT_ID","PLATFORM_SYSCODE","getUtcIsoString","Date","toISOString","sha256Hex","str","encoder","TextEncoder","data","encode","hashBuffer","window","crypto","subtle","digest","Array","from","Uint8Array","map","b","toString","padStart","join","hmacSha256Hex","key","keyData","cryptoKey","importKey","name","hash","sigBuffer","sign","getExternalCharities","method","url","URL","host","datetime","body","contentSha256","canonicalHeaders","signedHeaders","canonicalRequest","pathname","search","signature","authorization","headers","res","fetch","ok","Error","status","json","result","isArray"],"sources":["C:/Users/corva/Downloads/React Code/src/services/externalCharityApi.js"],"sourcesContent":["// External Charity API utility for React\r\n// Uses browser crypto.subtle for SHA256 and HMAC\r\n\r\nconst API_URL = 'https://stg.foodservices.openapipaas.com/common/social-ewallet/charities?page=0';\r\nconst API_KEY = 'r4TEOYgoqurHaCR3sLFC';\r\nconst PROJECT_ID = '205d6cbd-db6c-4dc0-9522-cf011e0dd34c';\r\nconst PLATFORM_SYSCODE = '101';\r\n\r\n// Helper: Get current UTC ISO8601 string\r\nfunction getUtcIsoString() {\r\n  return new Date().toISOString();\r\n}\r\n\r\n// Helper: SHA256 hash (returns hex string)\r\nasync function sha256Hex(str) {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(str);\r\n  const hashBuffer = await window.crypto.subtle.digest('SHA-256', data);\r\n  return Array.from(new Uint8Array(hashBuffer)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\n// Helper: HMAC-SHA256 signature (returns hex string)\r\nasync function hmacSha256Hex(key, str) {\r\n  const encoder = new TextEncoder();\r\n  const keyData = encoder.encode(key);\r\n  const cryptoKey = await window.crypto.subtle.importKey(\r\n    'raw', keyData, { name: 'HMAC', hash: 'SHA-256' }, false, ['sign']\r\n  );\r\n  const sigBuffer = await window.crypto.subtle.sign('HMAC', cryptoKey, encoder.encode(str));\r\n  return Array.from(new Uint8Array(sigBuffer)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\n// Main fetch function\r\nexport async function getExternalCharities() {\r\n  const method = 'GET';\r\n  const url = new URL(API_URL);\r\n  const host = url.host;\r\n  const datetime = getUtcIsoString();\r\n  const body = '';\r\n  const contentSha256 = await sha256Hex(body);\r\n\r\n  // Canonical headers and signed headers\r\n  const canonicalHeaders = [\r\n    `datetime:${datetime}`,\r\n    `host:${host}`,\r\n    `project-id:${PROJECT_ID}`,\r\n    `platform-syscode:${PLATFORM_SYSCODE}`,\r\n    `content-sha256:${contentSha256}`\r\n  ];\r\n  const signedHeaders = 'datetime|host|project-id|platform-syscode|content-sha256';\r\n\r\n  // Canonical request string for signature\r\n  const canonicalRequest = [\r\n    method,\r\n    url.pathname + url.search,\r\n    canonicalHeaders.join('\\n')\r\n  ].join('\\n');\r\n\r\n  // Signature\r\n  const signature = await hmacSha256Hex(API_KEY, canonicalRequest);\r\n\r\n  // Authorization header\r\n  const authorization = `HMAC-SHA256 Credential=${API_KEY}&SignedHeaders=${signedHeaders}&Signature=${signature}`;\r\n\r\n  // Headers\r\n  const headers = {\r\n    'api-key': API_KEY,\r\n    'project-id': PROJECT_ID,\r\n    'platform-syscode': PLATFORM_SYSCODE,\r\n    'Content-Type': 'application/json',\r\n    'datetime': datetime,\r\n    'content-sha256': contentSha256,\r\n    'Authorization': authorization\r\n  };\r\n\r\n  // Fetch\r\n  const res = await fetch(API_URL, { method, headers });\r\n  if (!res.ok) throw new Error('Failed to fetch charities: ' + res.status);\r\n  const json = await res.json();\r\n  // Return the data array\r\n  return (json.result && Array.isArray(json.result.data)) ? json.result.data : [];\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}