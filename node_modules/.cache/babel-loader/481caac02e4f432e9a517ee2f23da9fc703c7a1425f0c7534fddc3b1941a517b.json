{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mingj\\\\Downloads\\\\Web_Dashboard\\\\src\\\\services\\\\api.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [donations, setDonations] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const API_BASE_URL = 'http://10.0.2.2:8000/api/v1';\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        // Fetch all endpoints simultaneously\n        const [usersResponse, donationsResponse, ordersResponse] = await Promise.all([fetch(`${API_BASE_URL}/users`), fetch(`${API_BASE_URL}/donations`), fetch(`${API_BASE_URL}/orders`)]);\n\n        // Parse JSON responses\n        const usersData = await usersResponse.json();\n        const donationsData = await donationsResponse.json();\n        const ordersData = await ordersResponse.json();\n\n        // Console log the data\n        console.log('Users data:', usersData);\n        console.log('Donations data:', donationsData);\n        console.log('Orders data:', ordersData);\n\n        // Set state\n        setUsers(usersData);\n        setDonations(donationsData);\n        setOrders(ordersData);\n\n        // Count genders for pie chart\n        const genderCounts = genderData.reduce((acc, gender) => {\n          acc[gender] = (acc[gender] || 0) + 1;\n          return acc;\n        }, {});\n        console.log('Gender counts:', genderCounts);\n\n        // Extract donation_amt data\n        const donationAmounts = donationsData.map(donation => donation.donation_amt).filter(amt => amt != null);\n        console.log('Donation amounts:', donationAmounts);\n\n        // Calculate total donations\n        const totalDonations = donationAmounts.reduce((sum, amt) => sum + amt, 0);\n        console.log('Total donations:', totalDonations);\n\n        // Set chart data\n        setChartData({\n          genderData,\n          donationAmounts,\n          genderCounts,\n          totalDonations\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Check console for data logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Users: \", users.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Donations: \", donations.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Orders: \", orders.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"9sZhBUj1aRy4LN9ugUxWQHfVNAc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","users","setUsers","donations","setDonations","orders","setOrders","loading","setLoading","API_BASE_URL","fetchAllData","usersResponse","donationsResponse","ordersResponse","Promise","all","fetch","usersData","json","donationsData","ordersData","console","log","genderCounts","genderData","reduce","acc","gender","donationAmounts","map","donation","donation_amt","filter","amt","totalDonations","sum","setChartData","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/mingj/Downloads/Web_Dashboard/src/services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst Dashboard = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [donations, setDonations] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const API_BASE_URL = 'http://10.0.2.2:8000/api/v1';\r\n\r\n  useEffect(() => {\r\n    const fetchAllData = async () => {\r\n      try {\r\n        // Fetch all endpoints simultaneously\r\n        const [usersResponse, donationsResponse, ordersResponse] = await Promise.all([\r\n          fetch(`${API_BASE_URL}/users`),\r\n          fetch(`${API_BASE_URL}/donations`),\r\n          fetch(`${API_BASE_URL}/orders`)\r\n        ]);\r\n\r\n        // Parse JSON responses\r\n        const usersData = await usersResponse.json();\r\n        const donationsData = await donationsResponse.json();\r\n        const ordersData = await ordersResponse.json();\r\n\r\n        // Console log the data\r\n        console.log('Users data:', usersData);\r\n        console.log('Donations data:', donationsData);\r\n        console.log('Orders data:', ordersData);\r\n\r\n        // Set state\r\n        setUsers(usersData);\r\n        setDonations(donationsData);\r\n        setOrders(ordersData);\r\n\r\n        // Count genders for pie chart\r\n        const genderCounts = genderData.reduce((acc, gender) => {\r\n          acc[gender] = (acc[gender] || 0) + 1;\r\n          return acc;\r\n        }, {});\r\n        console.log('Gender counts:', genderCounts);\r\n\r\n        // Extract donation_amt data\r\n        const donationAmounts = donationsData.map(donation => donation.donation_amt).filter(amt => amt != null);\r\n        console.log('Donation amounts:', donationAmounts);\r\n\r\n        // Calculate total donations\r\n        const totalDonations = donationAmounts.reduce((sum, amt) => sum + amt, 0);\r\n        console.log('Total donations:', totalDonations);\r\n\r\n        // Set chart data\r\n        setChartData({\r\n          genderData,\r\n          donationAmounts,\r\n          genderCounts,\r\n          totalDonations\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllData();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <p>Check console for data logs</p>\r\n      <p>Users: {users.length}</p>\r\n      <p>Donations: {donations.length}</p>\r\n      <p>Orders: {orders.length}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}