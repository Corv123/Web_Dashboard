{"ast":null,"code":"// Charity API connection for external social-ewallet/charities endpoint\nimport CryptoJS from 'crypto-js';\nconst CHARITY_API_BASE = 'https://stg.foodservices.openapipaas.com/api/v1';\nconst CHARITY_API_KEY = 'Con77PLDrkoKDYmcZWSg';\nconst CHARITY_PROJECT_ID = '234498d1-584c-4f08-b686-452a6a7056ca';\nconst CHARITY_PLATFORM_SYSCODE = '100';\nconst CHARITY_SECRET_KEY = 'tIe7GAzhHPOxGxHnH41E';\n\n// Helper to generate SHA256 hash (hex)\nfunction sha256Hex(str) {\n  return CryptoJS.SHA256(str).toString(CryptoJS.enc.Hex);\n}\n\n// Helper to generate HMAC-SHA256 signature (hex)\nfunction hmacSha256Hex(key, str) {\n  return CryptoJS.HmacSHA256(str, key).toString(CryptoJS.enc.Hex);\n}\n\n// Helper to generate headers for the charity API\nexport function generateCharityHeaders({\n  method = 'GET',\n  urlPathQuery = '',\n  body = '',\n  apiKey = CHARITY_API_KEY,\n  projectId = CHARITY_PROJECT_ID,\n  platformSyscode = CHARITY_PLATFORM_SYSCODE,\n  secretKey = CHARITY_SECRET_KEY\n} = {}) {\n  const isoNow = new Date().toISOString();\n  const contentHash = sha256Hex(body || '');\n  const signedHeaders = 'content-sha256;datetime;api-key;project-id;platform-syscode';\n  // Canonical string: method + '\\n' + urlPathQuery + '\\n' + contentHash + '\\n' + isoNow + '\\n' + apiKey + '\\n' + projectId + '\\n' + platformSyscode\n  const canonicalString = [method.toUpperCase(), urlPathQuery, contentHash, isoNow, apiKey, projectId, platformSyscode].join('\\n');\n  const signature = hmacSha256Hex(secretKey, canonicalString);\n  const authorization = `HMAC-SHA256 Credential=${apiKey}&SignedHeaders=${signedHeaders}&Signature=${signature}`;\n  return {\n    'datetime': isoNow,\n    'content-sha256': contentHash,\n    'Authorization': authorization,\n    'api-key': apiKey,\n    'project-id': projectId,\n    'platform-syscode': platformSyscode,\n    'Content-Type': 'application/json'\n  };\n}\nexport const getAllCharities = async (page = 0) => {\n  const urlPathQuery = `/common/social-ewallet/charities?page=${page}`;\n  const url = `${CHARITY_API_BASE}${urlPathQuery}`;\n  const headers = generateCharityHeaders({\n    method: 'GET',\n    urlPathQuery,\n    body: ''\n  });\n  return fetch(url, {\n    headers\n  }).then(res => res.json());\n};","map":{"version":3,"names":["CryptoJS","CHARITY_API_BASE","CHARITY_API_KEY","CHARITY_PROJECT_ID","CHARITY_PLATFORM_SYSCODE","CHARITY_SECRET_KEY","sha256Hex","str","SHA256","toString","enc","Hex","hmacSha256Hex","key","HmacSHA256","generateCharityHeaders","method","urlPathQuery","body","apiKey","projectId","platformSyscode","secretKey","isoNow","Date","toISOString","contentHash","signedHeaders","canonicalString","toUpperCase","join","signature","authorization","getAllCharities","page","url","headers","fetch","then","res","json"],"sources":["C:/Users/corva/Downloads/React Code/src/services/charityApi.js"],"sourcesContent":["// Charity API connection for external social-ewallet/charities endpoint\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst CHARITY_API_BASE = 'https://stg.foodservices.openapipaas.com/api/v1';\r\nconst CHARITY_API_KEY = 'Con77PLDrkoKDYmcZWSg';\r\nconst CHARITY_PROJECT_ID = '234498d1-584c-4f08-b686-452a6a7056ca';\r\nconst CHARITY_PLATFORM_SYSCODE = '100';\r\nconst CHARITY_SECRET_KEY = 'tIe7GAzhHPOxGxHnH41E';\r\n\r\n// Helper to generate SHA256 hash (hex)\r\nfunction sha256Hex(str) {\r\n  return CryptoJS.SHA256(str).toString(CryptoJS.enc.Hex);\r\n}\r\n\r\n// Helper to generate HMAC-SHA256 signature (hex)\r\nfunction hmacSha256Hex(key, str) {\r\n  return CryptoJS.HmacSHA256(str, key).toString(CryptoJS.enc.Hex);\r\n}\r\n\r\n// Helper to generate headers for the charity API\r\nexport function generateCharityHeaders({\r\n  method = 'GET',\r\n  urlPathQuery = '',\r\n  body = '',\r\n  apiKey = CHARITY_API_KEY,\r\n  projectId = CHARITY_PROJECT_ID,\r\n  platformSyscode = CHARITY_PLATFORM_SYSCODE,\r\n  secretKey = CHARITY_SECRET_KEY,\r\n} = {}) {\r\n  const isoNow = new Date().toISOString();\r\n  const contentHash = sha256Hex(body || '');\r\n  const signedHeaders = 'content-sha256;datetime;api-key;project-id;platform-syscode';\r\n  // Canonical string: method + '\\n' + urlPathQuery + '\\n' + contentHash + '\\n' + isoNow + '\\n' + apiKey + '\\n' + projectId + '\\n' + platformSyscode\r\n  const canonicalString = [\r\n    method.toUpperCase(),\r\n    urlPathQuery,\r\n    contentHash,\r\n    isoNow,\r\n    apiKey,\r\n    projectId,\r\n    platformSyscode\r\n  ].join('\\n');\r\n  const signature = hmacSha256Hex(secretKey, canonicalString);\r\n  const authorization = `HMAC-SHA256 Credential=${apiKey}&SignedHeaders=${signedHeaders}&Signature=${signature}`;\r\n  return {\r\n    'datetime': isoNow,\r\n    'content-sha256': contentHash,\r\n    'Authorization': authorization,\r\n    'api-key': apiKey,\r\n    'project-id': projectId,\r\n    'platform-syscode': platformSyscode,\r\n    'Content-Type': 'application/json',\r\n  };\r\n}\r\n\r\nexport const getAllCharities = async (page = 0) => {\r\n  const urlPathQuery = `/common/social-ewallet/charities?page=${page}`;\r\n  const url = `${CHARITY_API_BASE}${urlPathQuery}`;\r\n  const headers = generateCharityHeaders({\r\n    method: 'GET',\r\n    urlPathQuery,\r\n    body: '',\r\n  });\r\n  return fetch(url, {\r\n    headers\r\n  }).then(res => res.json());\r\n}; "],"mappings":"AAAA;AACA,OAAOA,QAAQ,MAAM,WAAW;AAEhC,MAAMC,gBAAgB,GAAG,iDAAiD;AAC1E,MAAMC,eAAe,GAAG,sBAAsB;AAC9C,MAAMC,kBAAkB,GAAG,sCAAsC;AACjE,MAAMC,wBAAwB,GAAG,KAAK;AACtC,MAAMC,kBAAkB,GAAG,sBAAsB;;AAEjD;AACA,SAASC,SAASA,CAACC,GAAG,EAAE;EACtB,OAAOP,QAAQ,CAACQ,MAAM,CAACD,GAAG,CAAC,CAACE,QAAQ,CAACT,QAAQ,CAACU,GAAG,CAACC,GAAG,CAAC;AACxD;;AAEA;AACA,SAASC,aAAaA,CAACC,GAAG,EAAEN,GAAG,EAAE;EAC/B,OAAOP,QAAQ,CAACc,UAAU,CAACP,GAAG,EAAEM,GAAG,CAAC,CAACJ,QAAQ,CAACT,QAAQ,CAACU,GAAG,CAACC,GAAG,CAAC;AACjE;;AAEA;AACA,OAAO,SAASI,sBAAsBA,CAAC;EACrCC,MAAM,GAAG,KAAK;EACdC,YAAY,GAAG,EAAE;EACjBC,IAAI,GAAG,EAAE;EACTC,MAAM,GAAGjB,eAAe;EACxBkB,SAAS,GAAGjB,kBAAkB;EAC9BkB,eAAe,GAAGjB,wBAAwB;EAC1CkB,SAAS,GAAGjB;AACd,CAAC,GAAG,CAAC,CAAC,EAAE;EACN,MAAMkB,MAAM,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACvC,MAAMC,WAAW,GAAGpB,SAAS,CAACY,IAAI,IAAI,EAAE,CAAC;EACzC,MAAMS,aAAa,GAAG,6DAA6D;EACnF;EACA,MAAMC,eAAe,GAAG,CACtBZ,MAAM,CAACa,WAAW,CAAC,CAAC,EACpBZ,YAAY,EACZS,WAAW,EACXH,MAAM,EACNJ,MAAM,EACNC,SAAS,EACTC,eAAe,CAChB,CAACS,IAAI,CAAC,IAAI,CAAC;EACZ,MAAMC,SAAS,GAAGnB,aAAa,CAACU,SAAS,EAAEM,eAAe,CAAC;EAC3D,MAAMI,aAAa,GAAG,0BAA0Bb,MAAM,kBAAkBQ,aAAa,cAAcI,SAAS,EAAE;EAC9G,OAAO;IACL,UAAU,EAAER,MAAM;IAClB,gBAAgB,EAAEG,WAAW;IAC7B,eAAe,EAAEM,aAAa;IAC9B,SAAS,EAAEb,MAAM;IACjB,YAAY,EAAEC,SAAS;IACvB,kBAAkB,EAAEC,eAAe;IACnC,cAAc,EAAE;EAClB,CAAC;AACH;AAEA,OAAO,MAAMY,eAAe,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,KAAK;EACjD,MAAMjB,YAAY,GAAG,yCAAyCiB,IAAI,EAAE;EACpE,MAAMC,GAAG,GAAG,GAAGlC,gBAAgB,GAAGgB,YAAY,EAAE;EAChD,MAAMmB,OAAO,GAAGrB,sBAAsB,CAAC;IACrCC,MAAM,EAAE,KAAK;IACbC,YAAY;IACZC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,OAAOmB,KAAK,CAACF,GAAG,EAAE;IAChBC;EACF,CAAC,CAAC,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}