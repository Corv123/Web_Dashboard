{"ast":null,"code":"// External Charity API utility for React\n// Uses browser crypto.subtle for SHA256 and base64 encoding (Dart-style signature)\n\nconst API_URL = 'https://stg.foodservices.openapipaas.com/api/v1/common/social-ewallet/charities?page=0';\nconst API_KEY = 'r4TEOYgoqurHaCR3sLFC';\nconst PROJECT_ID = '205d6cbd-db6c-4dc0-9522-cf011e0dd34c';\nconst PLATFORM_SYSCODE = '101';\nconst BASE_URL = 'https://stg.foodservices.openapipaas.com/api/v1';\nconst SECRET_KEY = 'tIe7GAzhHPOxGxHnH41E '; // <-- Replace with your actual secret key\n\n// Helper: SHA256 hash, returns base64 string\nasync function sha256Base64(str) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(str);\n  const hashBuffer = await window.crypto.subtle.digest('SHA-256', data);\n  return btoa(String.fromCharCode(...new Uint8Array(hashBuffer)));\n}\n\n// Main fetch function (Dart-style signature)\nexport async function getExternalCharities() {\n  const method = 'GET';\n  const url = new URL(API_URL);\n  const urlPathQuery = url.pathname + url.search;\n  const isoNow = new Date().toISOString();\n  const host = new URL(BASE_URL).host;\n  const body = {};\n  const bodyJson = JSON.stringify(body);\n  const contentHash = await sha256Base64(bodyJson);\n  const signedHeaders = 'datetime|host|project-id|platform-syscode|content-sha256';\n  const stringToSign = `${method}\\n${urlPathQuery}\\n${isoNow}|${host}|${PROJECT_ID}|${PLATFORM_SYSCODE}|${contentHash}`;\n\n  // Signature: sha256(stringToSign + secretKey), base64\n  const signatureInput = stringToSign + SECRET_KEY;\n  const signature = await sha256Base64(signatureInput);\n  const headers = {\n    'datetime': isoNow,\n    'content-sha256': contentHash,\n    'Authorization': `HMAC-SHA256 Credential=${API_KEY}&SignedHeaders=${signedHeaders}&Signature=${signature}`,\n    'api-key': API_KEY,\n    'project-id': PROJECT_ID,\n    'platform-syscode': PLATFORM_SYSCODE,\n    'Content-Type': 'application/json'\n  };\n  const res = await fetch(API_URL, {\n    method,\n    headers\n  });\n  if (!res.ok) throw new Error('Failed to fetch charities: ' + res.status);\n  const json = await res.json();\n  return json.result && Array.isArray(json.result.data) ? json.result.data : [];\n}","map":{"version":3,"names":["API_URL","API_KEY","PROJECT_ID","PLATFORM_SYSCODE","BASE_URL","SECRET_KEY","sha256Base64","str","encoder","TextEncoder","data","encode","hashBuffer","window","crypto","subtle","digest","btoa","String","fromCharCode","Uint8Array","getExternalCharities","method","url","URL","urlPathQuery","pathname","search","isoNow","Date","toISOString","host","body","bodyJson","JSON","stringify","contentHash","signedHeaders","stringToSign","signatureInput","signature","headers","res","fetch","ok","Error","status","json","result","Array","isArray"],"sources":["C:/Users/corva/Downloads/React Code/src/services/externalCharityApi.js"],"sourcesContent":["// External Charity API utility for React\r\n// Uses browser crypto.subtle for SHA256 and base64 encoding (Dart-style signature)\r\n\r\nconst API_URL = 'https://stg.foodservices.openapipaas.com/api/v1/common/social-ewallet/charities?page=0';\r\nconst API_KEY = 'r4TEOYgoqurHaCR3sLFC';\r\nconst PROJECT_ID = '205d6cbd-db6c-4dc0-9522-cf011e0dd34c';\r\nconst PLATFORM_SYSCODE = '101';\r\nconst BASE_URL = 'https://stg.foodservices.openapipaas.com/api/v1';\r\nconst SECRET_KEY = 'tIe7GAzhHPOxGxHnH41E '; // <-- Replace with your actual secret key\r\n\r\n// Helper: SHA256 hash, returns base64 string\r\nasync function sha256Base64(str) {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(str);\r\n  const hashBuffer = await window.crypto.subtle.digest('SHA-256', data);\r\n  return btoa(String.fromCharCode(...new Uint8Array(hashBuffer)));\r\n}\r\n\r\n// Main fetch function (Dart-style signature)\r\nexport async function getExternalCharities() {\r\n  const method = 'GET';\r\n  const url = new URL(API_URL);\r\n  const urlPathQuery = url.pathname + url.search;\r\n  const isoNow = new Date().toISOString();\r\n  const host = new URL(BASE_URL).host;\r\n  const body = {};\r\n  const bodyJson = JSON.stringify(body);\r\n  const contentHash = await sha256Base64(bodyJson);\r\n\r\n  const signedHeaders = 'datetime|host|project-id|platform-syscode|content-sha256';\r\n  const stringToSign = `${method}\\n${urlPathQuery}\\n${isoNow}|${host}|${PROJECT_ID}|${PLATFORM_SYSCODE}|${contentHash}`;\r\n\r\n  // Signature: sha256(stringToSign + secretKey), base64\r\n  const signatureInput = stringToSign + SECRET_KEY;\r\n  const signature = await sha256Base64(signatureInput);\r\n\r\n  const headers = {\r\n    'datetime': isoNow,\r\n    'content-sha256': contentHash,\r\n    'Authorization': `HMAC-SHA256 Credential=${API_KEY}&SignedHeaders=${signedHeaders}&Signature=${signature}`,\r\n    'api-key': API_KEY,\r\n    'project-id': PROJECT_ID,\r\n    'platform-syscode': PLATFORM_SYSCODE,\r\n    'Content-Type': 'application/json',\r\n  };\r\n\r\n  const res = await fetch(API_URL, { method, headers });\r\n  if (!res.ok) throw new Error('Failed to fetch charities: ' + res.status);\r\n  const json = await res.json();\r\n  return (json.result && Array.isArray(json.result.data)) ? json.result.data : [];\r\n} "],"mappings":"AAAA;AACA;;AAEA,MAAMA,OAAO,GAAG,wFAAwF;AACxG,MAAMC,OAAO,GAAG,sBAAsB;AACtC,MAAMC,UAAU,GAAG,sCAAsC;AACzD,MAAMC,gBAAgB,GAAG,KAAK;AAC9B,MAAMC,QAAQ,GAAG,iDAAiD;AAClE,MAAMC,UAAU,GAAG,uBAAuB,CAAC,CAAC;;AAE5C;AACA,eAAeC,YAAYA,CAACC,GAAG,EAAE;EAC/B,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,CAAC;EACjC,MAAMC,IAAI,GAAGF,OAAO,CAACG,MAAM,CAACJ,GAAG,CAAC;EAChC,MAAMK,UAAU,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACC,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEN,IAAI,CAAC;EACrE,OAAOO,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIC,UAAU,CAACR,UAAU,CAAC,CAAC,CAAC;AACjE;;AAEA;AACA,OAAO,eAAeS,oBAAoBA,CAAA,EAAG;EAC3C,MAAMC,MAAM,GAAG,KAAK;EACpB,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACxB,OAAO,CAAC;EAC5B,MAAMyB,YAAY,GAAGF,GAAG,CAACG,QAAQ,GAAGH,GAAG,CAACI,MAAM;EAC9C,MAAMC,MAAM,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACvC,MAAMC,IAAI,GAAG,IAAIP,GAAG,CAACpB,QAAQ,CAAC,CAAC2B,IAAI;EACnC,MAAMC,IAAI,GAAG,CAAC,CAAC;EACf,MAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;EACrC,MAAMI,WAAW,GAAG,MAAM9B,YAAY,CAAC2B,QAAQ,CAAC;EAEhD,MAAMI,aAAa,GAAG,0DAA0D;EAChF,MAAMC,YAAY,GAAG,GAAGhB,MAAM,KAAKG,YAAY,KAAKG,MAAM,IAAIG,IAAI,IAAI7B,UAAU,IAAIC,gBAAgB,IAAIiC,WAAW,EAAE;;EAErH;EACA,MAAMG,cAAc,GAAGD,YAAY,GAAGjC,UAAU;EAChD,MAAMmC,SAAS,GAAG,MAAMlC,YAAY,CAACiC,cAAc,CAAC;EAEpD,MAAME,OAAO,GAAG;IACd,UAAU,EAAEb,MAAM;IAClB,gBAAgB,EAAEQ,WAAW;IAC7B,eAAe,EAAE,0BAA0BnC,OAAO,kBAAkBoC,aAAa,cAAcG,SAAS,EAAE;IAC1G,SAAS,EAAEvC,OAAO;IAClB,YAAY,EAAEC,UAAU;IACxB,kBAAkB,EAAEC,gBAAgB;IACpC,cAAc,EAAE;EAClB,CAAC;EAED,MAAMuC,GAAG,GAAG,MAAMC,KAAK,CAAC3C,OAAO,EAAE;IAAEsB,MAAM;IAAEmB;EAAQ,CAAC,CAAC;EACrD,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,GAAGH,GAAG,CAACI,MAAM,CAAC;EACxE,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACK,IAAI,CAAC,CAAC;EAC7B,OAAQA,IAAI,CAACC,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAACC,MAAM,CAACtC,IAAI,CAAC,GAAIqC,IAAI,CAACC,MAAM,CAACtC,IAAI,GAAG,EAAE;AACjF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}